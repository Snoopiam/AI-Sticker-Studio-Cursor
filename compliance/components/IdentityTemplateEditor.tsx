/**
 * @file components/IdentityTemplateEditor.tsx
 * @description A component that provides an interface for advanced users to view and edit
 * the JSON-based "Identity Blueprint" or "Identity Template" generated by the AI during calibration.
 */

import React, { useState } from 'react';

/**
 * @interface IdentityTemplateEditorProps
 * @description Defines the props for the IdentityTemplateEditor component.
 */
interface IdentityTemplateEditorProps {
    template: string;
    onChange: (newTemplate: string) => void;
}

/**
 * @component IdentityTemplateEditor
 * @description Renders a simple view by default, which can be expanded into a textarea
 * to allow direct manipulation of the identity template JSON.
 * @param {IdentityTemplateEditorProps} props - Component props.
 */
export const IdentityTemplateEditor: React.FC<IdentityTemplateEditorProps> = ({ template, onChange }) => {
    const [isEditing, setIsEditing] = useState(false);
    
    // Don't render anything if there's no template.
    if (!template) return null;

    // Default collapsed view.
    if (!isEditing) {
        return (
            <div className="p-3 bg-gray-900/50 rounded-lg">
                <div className="flex justify-between items-center mb-2">
                    <p className="text-xs font-semibold text-gray-300">AI Identity Blueprint:</p>
                    <button onClick={() => setIsEditing(true)} className="text-xs text-purple-400 hover:text-purple-300 font-semibold">Edit</button>
                </div>
                <p className="text-xs text-gray-400">Identity Lock v5 is active. Click 'Edit' for advanced control.</p>
            </div>
        )
    }

    // Expanded view with a textarea for editing.
    return (
        <div className="p-3 bg-gray-900/50 rounded-lg">
            <div className="flex justify-between items-center mb-2">
                <h4 className="text-sm font-bold text-gray-200">Advanced: Edit Identity Blueprint</h4>
                 <button onClick={() => setIsEditing(false)} className="text-xs text-purple-400 hover:text-purple-300 font-semibold">Done</button>
            </div>
            <textarea
                value={template}
                onChange={(e) => onChange(e.target.value)}
                rows={10}
                className="w-full bg-gray-800 border border-gray-600 rounded-md text-xs font-mono p-2"
                placeholder="Edit JSON template..."
            />
            <p className="text-xs text-gray-400 mt-1">Warning: Invalid JSON may cause generation errors.</p>
        </div>
    );
};
